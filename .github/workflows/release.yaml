name: Release

# Releasesへのファイル追加のために書き込み権限が必要
permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'
      - 'commit-*'

jobs:
  build:
    name: Release binary
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: md2html-x86_64-linux.tar.xz
            asset_name: md2html-x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            artifact_name: md2html-aarch64-linux.tar.xz
            asset_name: md2html-aarch64-unknown-linux-musl
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            artifact_name: md2html-x86_64-windows.tar.xz
            asset_name: md2html-x86_64-pc-windows-gnu
          - os: ubuntu-latest
            target: x86_64-apple-darwin
            artifact_name: md2html-x86_64-windows.tar.xz
            asset_name: md2html-x86_64-apple-darwin
          - os: ubuntu-latest
            target: aarch64-apple-darwin
            artifact_name: md2html-aarch64-apple-darwin.tar.xz
            asset_name: md2html-aarch64-apple-darwin


    runs-on: ${{ matrix.os }}
    env:
      SCCACHE_CACHE_SIZE: 1G
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
      SCCACHE_DIR: /home/runner/.cache/sccache
      RUSTFLAGS: "-Clinker=gcc -Clink-arg=-fuse-ld=mold"
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          path: md2html
      - name: clone pulldown-cmark
        run: |
          git clone --depth 1 https://github.com/pulldown-cmark/pulldown-cmark.git
          cd pulldown-cmark
          git fetch --prune --unshallow --tags --no-recurse-submodules --filter=tree:0

      - name: checkout tag
        run: |
          TAG=${GITHUB_REF##*/}
          TAG=${TAG#commit-}
          TAG=${TAG%-release}
          cd pulldown-cmark
          COMMIT=$(git log -1 ${TAG} --pretty=%h)
          if [[ "$TAG" =~ ^commit- ]]; then
            cd ../md2html
            echo $TAG
            git tag $TAG -d
            git push origin $TAG -d
            cd ../pulldown-cmark
            base_tag=$(git describe --tags --abbrev=0 --always ${COMMIT})
            echo $base_tag
            base_tag=${base_tag/+*/}
            echo $base_tag
            COUNT=$(($(git rev-list --count $COMMIT)-$(git rev-list --count $base_tag)))
            if [[ $COUNT != 0 ]];then
              TAG=$base_tag-$COUNT-g$COMMIT
            else
              TAG=$base_tag
            fi
            echo "tag_name=" $TAG
            echo $TAG
            echo "tag_name=${TAG}" >> $GITHUB_OUTPUT
            echo "tag_commit=$(git log -1 --pretty=%H $TAG)" >> $GITHUB_OUTPUT
          else
            echo "tag_name=$(git describe --tags --always $TAG)" >> $GITHUB_OUTPUT
            echo "tag_commit=$(git log -1 --pretty=%H $TAG)" >> $GITHUB_OUTPUT
          fi
          cd ../md2html
          echo $TAG | sed -e 's/-g.*$//g' -e 's/-/+/g' > version.txt
          cat version.txt

      - name: Generate release tag
        id: release_tag
        run: |
          echo "release_tag=$(cat md2html/version.txt)" >> $GITHUB_OUTPUT
      - name: Generate release note
        id: release_note
        run: |
          {
          echo "release_note<<EOF"
          echo "$(cd pulldown-cmark && git log --pretty=format:"%C(yellow)commit %H%C(auto)%d%nAuthor: %an%nDate:   %ad%n%n%s%n%n%b" -1 ${{ steps.release_tag.outputs.release_tag }})"
          echo "EOF"
          } >> $GITHUB_OUTPUT
      - name: test
        run: |
          echo "1: ${{ steps.release_tag.outputs.release_tag }}"
          echo "2: ${{ steps.release_note.outputs.release_note }}"

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4
        with:
          version: "v0.8.1"

      - name: Install mold linker
        uses: rui314/setup-mold@v1
        with:
          mold-version: 2.32.0
          make-default: true

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cross build with all features
        uses: actions-rs/cargo@v1
        with:
          working-directory: md2html
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} --all-features --manifest-path md2html/Cargo.toml

      - name: Build archive
        shell: bash
        run: |
          # Replace with the name of your binary
          binary_name="md2html"

          dirname="$binary_name-${{ steps.release_tag.outputs.release_tag }}-${{ matrix.target }}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi

          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            7z a ../"$dirname.zip" "$dirname"
            7z l ../"$dirname.zip"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf ../"$dirname.tar.gz" "$dirname"
            tar tvf ../"$dirname.tar.gz"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET }}

